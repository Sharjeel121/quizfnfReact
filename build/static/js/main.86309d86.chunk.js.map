{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","className","length","map","answerOption","onClick","nextQuestion","handleAnswerOptionClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAAe,I,kBCmGAA,MA5Ff,WACE,IAAMC,EAAY,CAClB,CACCC,aAAc,mCACdC,cAAe,CACd,CAAEC,WAAY,WAAYC,WAAW,GACrC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,UAAWC,WAAW,KAGtC,CACCH,aAAc,uBACdC,cAAe,CACd,CAAEC,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,aAAcC,WAAW,KAGzC,CACCH,aAAc,2CACdC,cAAe,CACd,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,YAAaC,WAAW,KAGxC,CACCH,aAAc,yCACdC,cAAe,CACd,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,MAKhC,EAA8CC,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACD,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAcC,OAKE,aAJA,CAIA,OAAKC,UAAU,gBAAf,SACIJ,EACJ,qBAAKI,UAAU,gBAAf,SACA,6CACmBF,EADnB,WACkCV,EAAUa,YAI5C,qCACE,qBAAKD,UAAU,aAAf,SACE,4CAEF,sBAAKA,UAAU,oBAAf,UACE,qBAAIA,UAAU,cAAd,UAA4B,6CAAgBN,EAAkB,KAA9D,IAAyEN,EAAUa,UACnF,oBAAID,UAAU,MAAd,SAAqBZ,EAAUM,GAAiBL,eAChD,qBAAKW,UAAU,aAAf,SAEIZ,EAAUM,GAAiBJ,cAAcY,KAAI,SAACC,GAAD,OACjD,qBAAKH,UAAU,uBAAf,SACS,wBAAQA,UAAU,yBAAyBI,QAAS,kBApCnC,SAACZ,GAC7BA,GACHO,EAASD,EAAQ,GAGlB,IAAMO,EAAeX,EAAkB,EACnCW,EAAejB,EAAUa,OAC5BN,EAAmBU,GAEnBR,GAAa,GA2B2DS,CAAwBH,EAAaX,YAA/F,SAA4GW,EAAaZ,6BC3E3HgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.86309d86.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport {useState} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Button } from '@mui/material';\n\nfunction App() {\n  const questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of Pakistan?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Peshawar', isCorrect: false },\n\t\t\t\t{ answerText: 'Lahore', isCorrect: false },\n\t\t\t\t{ answerText: 'Islamabad', isCorrect: true },\n\t\t\t\t{ answerText: 'Karachi', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Harry Potter books are there?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n  return (\n    // <div onClick={()=>setstate(!state)}>\n    //   {state?<img src={on}></img>:<img src={off}></img>}\n    //   <Button variant=\"contained\" onClick={()=>setstate(!state)} >click</Button>\n    // </div>\n    <div className=\"App container\">\n      \t{showScore ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t<h1>\n          \tYou scored {score} out of {questions.length}\n        </h1>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n      <div className=\"p-2 head  \" >\n        <h2 >Quiz App</h2>\n      </div>\n      <div className=\"p-5 questionCard \" >\n        <h3 className=\"ps-5 col-6 \"><span>Question {currentQuestion + 1}</span>/{questions.length}</h3>\n        <h4 className=\"p-4\">{questions[currentQuestion].questionText}</h4>\n        <div className=\"container \">\n         \n          \t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t <div className=\" col-lg-6 button p-2\">\n                 <button className=\"btn btn-primary  pb-3 \" onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n          </div>\n\t\t\t\t\t\t))}\n        </div>\n      </div>\n            </>\n      )}\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}